/**
 * Copyright (C) 2011-2012 Barchart, Inc. <http://www.barchart.com/>
 *
 * All rights reserved. Licensed under the OSI BSD License.
 *
 * http://www.opensource.org/licenses/bsd-license.php
 */

//
/**
 * https://developers.google.com/protocol-buffers/docs/proto
 *
 * factory for entries
 */

//
package barchart; // non-java (C, C++, etc) package name space

//
option java_package = "com.barchart.proto.buf.data";
option java_outer_classname = "FieldSpec";
option java_multiple_files = true;
option java_generate_equals_and_hash = true;
//
option optimize_for = SPEED;

//
/**
 *
 * head/entry contracts:
 *
 * actualValue = headValue + entryOffset
 * or
 * actualValue = entryOverride over headDefault
 *
 */
//
/**
  * enum value wire size rules
  *
  * note: value in 0...127 takes 1 byte on wire
  *
  * note: value in 128.... takes varInt128 more bytes on wire
  *
  * keep most frequent values first
  *
  */
//
/**
 * field tag wire size rules
 *
 * note: field number 1..15 is 1 byte tag, 16..127 is 2 byte tag
 */

// market data entry
message MarketEntry {
//
// entry action
	enum Action {
		ADD = 0; // new, create, insert
		EDIT = 1; // merge, modify, replace, override, overlay
		REMOVE = 2; // delete, erase, clear, reset
	}
	//
	// primary entry category
	// keep most frequent first
	enum Type {
		TRADE = 0; // a.k.a last sale; price & size (size mostly present)
		BID = 1; // book side
		ASK = 2; // book side
		CHANGE = 3; // such as price change from previous day
		UNDERLYING = 4; // such as option/spread underlying price
		VOLUME = 5;
		OPEN = 6;
		HIGH = 7;
		LOW = 8;
		CLOSE = 9; // a.k.a last sale, before close; price; (size mostly absent)
		SETTLE = 10;
		INTEREST = 11;
		CUVOL = 12; // cumulative volume
		STATUS = 13; // non price/size change; such as OPEN/CLOSE event
		SEQUENCE = 14; //such as snapshot & update sequence synchronization index

		// TODO
		// this should be expressed as "normal" type=BID/ASK
		// plussome Descriptor annotations, such as PERIOD_XXX or SESSION_XXX or both
		//	SESSION_HIGH_BID = 15;
		//	SESSION_LOW_ASK = 16;

		// TODO
		// is this semantically the same as SETTLE? then should be type=SETTLE plus annotation
		//	FIXING_PRICE = 17;

		// keep under 128
	}
	//
	// secondary entry category a.k.a entry annotation;
	// keep in "name-space-like" format
	enum Descriptor {
	//
		BOOK_IMPLIED = 0; // ICE, CME
		BOOK_RFQ = 1; // ICE
		//
		SETTLE_UNOFFICIAL = 2; // ICE
		SETTLE_PRELIMINARY = 3; // CME
		SETTLE_THEORETICAL = 4; // CME
		//
		PERIOD_DAY = 10;
		PERIOD_WEEK = 11;
		PERIOD_MONTH = 12;
		PERIOD_YEAR = 13;
		//
		// such as FORM-T
		SESSION_OVERNIGHT = 50; //
		//
		STATUS_MARKET_OPEN = 100; // OPRA, ICE
		STATUS_MARKET_CLOSE = 101; // OPRA, ICE
		STATUS_MARKET_PRE_OPEN = 102; // OPRA, ICE
		STATUS_MARKET_PRE_CLOSE = 103; // OPRA, ICE
		//
		STATUS_TRADING_PAUSE = 104;
		STATUS_TRADING_RESUME = 105;
		//
		// keep under 128
		//
		SIDE_FIRM = 110; // OPRA
		SIDE_CUSTOMER = 111; // OPRA
		//
		INDEX_ON_TRADE = 112; // OPRA
		INDEX_ON_BOOK = 113; // OPRA
		//
		VOLUME_BLOCK = 120; // ICE
		VOLUME_EFS = 121; // ICE
		VOLUME_EFP = 122; // ICE
		//
		PRICE_VWAP = 123; // ICE
		PRICE_SYSTEM = 124; // ICE IsSystemPricedLeg
		//
		TRADE_BLOCK = 125; // ICE
		//
		TRADE_CANCELED = 126; // ICE
		TRADE_INVESTIGATED = 127; // ICE
		//
		// keep under 128
	}

	//
	optional Action action = 1; // entry action
	optional Type type = 2; // primary category
	repeated Descriptor descriptor = 3 [packed = true]; // list of secondary category
	//
	optional sint64 marketId = 4; // override to head;
	optional sint64 sequence = 5; // offset to head;
	optional sint64 timeStamp = 6; // offset to head;
	optional sint32 tradeDate = 7; // offset to head;
	//
	optional sint64 priceMantissa = 8;
	optional sint32 priceExponent = 9; // override to head;
	//
	optional sint64 sizeMantissa = 10;
	optional sint32 sizeExponent = 11; // override to head;

	// such as book level, cuvol position, snapshot & update sequence, etc
	optional sint64 index = 12;

	// TODO review if really needed
	optional sint64 orderId = 13;

	// TODO is this really needed?
	// can this be always expressed as size above? //
	// if yes, should be "optional sint32 orderCount"
	//	optional sint32 numberOfOrders = 14;
	//
}
