//
/**
 * https://developers.google.com/protocol-buffers/docs/proto
 *
 * factory for messages
 */

//
package barchart; // non-java (C, C++, etc) package name space

//
option java_package = "com.barchart.proto.buf.inst";
option java_outer_classname = "MessageSpec";
option java_multiple_files = true;
option java_generate_equals_and_hash = true;
//
option optimize_for = SPEED;

// message fields
import "FieldSpec.proto";

//
enum InstrumentType {
	ForexInst = 1000;
	IndexInst = 1001;
	EquityInst = 1002;
	FutureInst = 1003;
	OptionInst = 1004;
	SpreadInst = 1005;
}

//
extend Instrument {
	optional Forex instForex = 1000; //
	optional Index instIndex = 1001; //
	optional Equity instEquity = 1002; //
	optional Future instFuture = 1003; //
	optional Option instOption = 1004; //
	optional Spread instSpread = 1005; //
}

// market instrument message
message Instrument {
	option (optionEnumNameSuffix) = "Inst"; // msg type enum names must use suffix
	option (optionExtensionPrefix) = "inst"; // msg extension names must use prefix

	extensions 1000 to 2000;

	optional sint64 instrumentId = 1;

	optional string vendor = 2;

	optional string vendorSymbol = 3;

	optional string description = 4;

	optional InstrumentType instrumentType = 5;

	optional BookType bookType = 6;

	optional sint32 bookDepth = 7;

	optional string cfiCode = 8;

	optional string currency = 9;

	optional sint64 minPriceIncrementMantissa = 10;

	optional sint32 minPriceIncrementExponent = 11;

	optional sint64 pointValueMantissa = 12;

	optional sint32 pointValueExponent = 13;


	optional FractionType fractionType = 14;

	optional sint32 displayExponent = 16;

	optional sint32 displayFractionDenominator = 17;

	optional Calendar calendar = 18;

	optional sint64 recordCreateTime = 19; // when instrument was created

	optional sint64 recordUpdateTime = 20; // when instrument must be updated

}

enum FractionType {
	BINARY = 0;
	DECIMAL = 1;
}

message Equity {
}

message Forex {
}

message Index {
	optional sint64 underlyingInstrumentId = 1;
}

message Future {
	optional sint64 underlyingInstrumentId = 1;
}

message Option {
	optional sint64 underlyingInstrumentId = 1;
	optional Decimal strikePrice = 2;
	optional OptionType optionType = 3;
	optional OptionStyle optionStyle = 4;
}

message Spread {
	repeated sint64 underlyingInstrumentId = 1;
	optional SpreadType spreadType = 2;
}
