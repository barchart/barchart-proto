/**
 * Copyright (C) 2011-2012 Barchart, Inc. <http://www.barchart.com/>
 *
 * All rights reserved. Licensed under the OSI BSD License.
 *
 * http://www.opensource.org/licenses/bsd-license.php
 */

package openfeed;

option java_package = "com.barchart.openfeed";
option java_outer_classname = "OpenFeed";
option java_multiple_files = true;
option java_generate_equals_and_hash = true;

option optimize_for = SPEED;

enum BookAction {
	ADD_PRICE_LEVEL = 0;
	EDIT_PRICE_LEVEL = 1;
	REMOVE_PRICE_LEVEL = 2;
}

enum Side {
	BID = 0;
	ASK = 1;
}

enum MarketStatus {
	OPEN = 0;
	CLOSED = 1;
	HALTED = 2;
}

enum MarketDataType {
	UPDATE = 0;
	SNAPSHOT = 1;
}

enum MarketEventType {
	TRADE = 0;
	SESSION_HIGH = 1;
	SESSION_LOW = 2;
	STATE_CHANGE = 3;
	SETTLEMENT = 4;
	OPEN_INTEREST = 5;
}


message BookEvent {
	optional BookAction action = 1;
	
	optional Side side = 2;
	
	optional sint32 priceLevel = 3;

	optional sint64 priceMantissa = 4;
	optional sint32 priceExponent = 5;

	optional sint64 quantityMantissa = 6;
	optional sint32 quantityExponent = 7;
	
	optional sint32 numberOfOrders = 8;

}

message MarketEvent {
	optional MarketEventType type = 1;
	
	optional sint64 priceMantissa = 2;
	optional sint32 priceExponent = 3;

	optional sint64 quantityMantissa = 4;
	optional sint32 quantityExponent = 5;

//	optional MarketState marketState = 6;	
}


message MarketUpdate {
	
	optional sint64 marketId = 1;
	
	optional sint64 marketSequence = 2;
	
	repeated BookEvent bookEvents = 3;
	
//	repeated MarketEntry marketEvents = 4;

}

message MarketSnapshot {

	optional sint64 marketId = 1;
	
	optional sint64 lastMarketSequence = 2;
	
	repeated BookEvent bookEvents = 3;
	

}





































/*


message Quote {

	optional sint32 open = 0;
	
	optional sint32 close = 1;
	
	optional sint32 last = 2;
	
	optional sint32 volume = 3;
	
	optional sint32 openInterest = 4;
	
	optional MarketStatus marketStatus = 5;

}



message InstrumentAlias {
	
	optional string vendor = 0;
	
	optional string alias = 1;
}

message InstrumentDefinition {
	
	optional sint64 marketId = 0;
	
	repeated InstrumentAlias aliases = 1;
	
	optional string instrumentDescription = 2;
	
}

message OpenFeedSessionPacket {

	optional sint64 sessionSequence = 0;
	
	optional sint64 timestamp = 1;

}

message DataRequest {

	optional DataRequestType type = 0;
	
	repeated sint64 marketIds = 1;

}




message MarketDataMessage {

	optional sint64 marketId = 0;
	
	optional MarketDataType type = 1;
	
	optional sint64 lastMarketSequence = 2;
	
	repeated BookEntry bookEntries = 4;
	
	repeated MarketEvent marketEvents = 5;
	
}



*/