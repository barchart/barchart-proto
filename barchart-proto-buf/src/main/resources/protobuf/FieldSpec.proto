/**
 * Copyright (C) 2011-2012 Barchart, Inc. <http://www.barchart.com/>
 *
 * All rights reserved. Licensed under the OSI BSD License.
 *
 * http://www.opensource.org/licenses/bsd-license.php
 */

//
/**
 * https://developers.google.com/protocol-buffers/docs/proto
 *
 * factory for message fields
 */

//
package barchart; // non-java (C, C++, etc) package name space

//
option java_package = "com.barchart.proto.buf";
option java_outer_classname = "FieldSpec";
option java_multiple_files = true;
option java_generate_equals_and_hash = true;
//
option optimize_for = SPEED;

//
/**
 *
 * base - entry contracts:
 *
 * 1) actualValue = baseValue + entryOffset
 *
 * 2) actualValue = entryOverride over baseDefault
 *
 */
//
/**
  * enum rules
  *
  * 1) note: index in 0...127 takes 1 byte on wire
  *
  * 2) note: index in 128 and more takes varInt128 more bytes on wire
  *
  * 3) keep most frequent index first
  *
  * 4) can not change name/index after published
  *
  * 5) can add more new name/index
  *
  * 6) can add more name for same index
  *
  */

// universal data entry field
// note: field number 1..15 is 1 byte tag, 16..127 is 2 byte tag
message MarketDataEntry {
//
// primary entry category; single
	enum Type {
	//
		TRADE = 0; // a.k.a last sale; price & size (size mostly present)
		//
		BID = 1; // book side
		ASK = 2; // book side
		//
		OPEN = 3;
		HIGH = 4;
		LOW = 5;
		CLOSE = 6; // a.k.a last sale; price; (size mostly absent)
		//
		SETTLE = 7;
		//
		VOLUME = 8;
		//
		INTEREST = 9;
		//
		CUVOL = 10; // cumulative volume
		//
		STATUS = 11; // non price/size change; such as OPEN/CLOSE event
		//
		SEQUENCE = 12; //such as snapshot+update sequence synchronization index
		//
		UNDERLYING = 13; // such as option underlying price
		//
		CHANGE = 14; // such as price change from previous day
		//
		// keep under 128
	}
	//
	// secondary entry category; multiple
	// keep in name space like format
	enum Descriptor {
	//
		BOOK_IMPLIED = 0; // bid/ask entry is for implied book
		//
		SETTLE_PRELIMINARY = 3; //
		SETTLE_THEORETICAL = 4; //
		//
		PERIOD_DAY = 10;
		PERIOD_MONTH = 11;
		PERIOD_YEAR = 12;
		//
		SESSION_OVERNIGHT = 50; // such as FORM-T
		//
		STATUS_MARKET_OPEN = 100;
		STATUS_MARKET_CLOSE = 101;
		STATUS_MARKET_PRE_OPEN = 102;
		STATUS_MARKET_PRE_CLOSE = 103;
		//
		STATUS_TRADING_PAUSE = 104;
		STATUS_TRADING_RESUME = 105;
		//
		// keep under 128
		//
		SIDE_FIRM = 110; // OPRA
		SIDE_CUSTOMER = 111; // OPRA
		//
		INDEX_ON_TRADE = 112; // OPRA
		INDEX_ON_BOOK = 113; // OPRA
		//
	}
	//
	// entry action
	enum Action {
		ADD = 0; // new, create, insert
		EDIT = 1; // merge, modify, replace, override, overlay
		REMOVE = 2; // delete, erase, clear, reset
	}
	//
	// keep frequent field index in 1..15 range
	//
	optional Type type = 1; // primary category
	optional Action action = 2; // entry action
	repeated Descriptor descriptor = 3 [packed = true]; // list of secondary category descriptors
	//
	optional sint64 marketId = 4; // override to base;
	optional sint64 sequence = 5; // offset to base; market-local sequence number
	optional sint64 timeStamp = 6; // offset to base; millisUTC
	//
	optional sint64 priceMantissa = 7;
	optional sint32 priceExponent = 8; // override to base;
	//
	optional sint64 sizeMantissa = 9;
	optional sint32 sizeExponent = 10; // override to base;
	//
	// such as book level, cuvol position, snpashot & update sequence, etc
	optional sint64 index = 11;
	//
	// date in "fix format" 2012-07-04 -> 20120704
	optional sint32 tradeDate = 12; // offset to base;
	//
}

message MarketNewsEntry {
	enum Type {
		TODO_0 = 0;
		TODO_1 = 1;
	}

	optional sint64 marketId = 1;
	optional string url = 2;
	optional string strory = 4;
}
